nxf-scratch-dir c31a-s22:/scratch/local/57307528/nxf.b2espSV2jy
Executor: slurm  -  Time:null  -  Mem:10 GB  -  Queue: null
bowtie2-build --threads 8 GCF_000005845.2_ASM584v2_genomic_masked.fasta GCF_000005845.2_ASM584v2_genomic_masked
Settings:
  Output files: "GCF_000005845.2_ASM584v2_genomic_masked.*.bt2"
  Line rate: 6 (line is 64 bytes)
  Lines per side: 1 (side is 64 bytes)
  Offset rate: 4 (one in 16)
  FTable chars: 10
  Strings: unpacked
  Max bucket size: default
  Max bucket size, sqrt multiplier: default
  Max bucket size, len divisor: 32
  Difference-cover sample period: 1024
  Endianness: little
  Actual local endianness: little
  Sanity checking: disabled
  Assertions: disabled
  Random seed: 0
  Sizeofs: void*:8, int:4, long:8, size_t:8
Input files DNA, FASTA:
  GCF_000005845.2_ASM584v2_genomic_masked.fasta
Building a SMALL index
Reading reference sizes
  Time reading reference sizes: 00:00:00
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:00
bmax according to bmaxDivN setting: 144370
Using parameters --bmax 108278 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 108278 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:00
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:00
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:00
  Sanity-checking and returning
Building samples
Reserving space for 86 sample suffixes
Generating random suffixes
QSorting 86 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 86 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
Splitting and merging
  Splitting and merging time: 00:00:00
Split 9, merged 37; iterating...
Splitting and merging
  Splitting and merging time: 00:00:00
Split 5, merged 5; iterating...
Splitting and merging
  Splitting and merging time: 00:00:00
Split 4, merged 4; iterating...
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 1; iterating...
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 78301.4 (target: 108277)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 59
  Reserving size (108278) for bucket 1
Getting block 2 of 59
Getting block 3 of 59
  Reserving size (108278) for bucket 2
  Calculating Z arrays for bucket 1
  Reserving size (108278) for bucket 3
Getting block 4 of 59
Getting block 5 of 59
Getting block 6 of 59
  Entering block accumulator loop for bucket 1:
  Reserving size (108278) for bucket 4
  Reserving size (108278) for bucket 5
  Reserving size (108278) for bucket 6
Getting block 7 of 59
  Calculating Z arrays for bucket 2
  Calculating Z arrays for bucket 3
  Reserving size (108278) for bucket 7
  Calculating Z arrays for bucket 4
  Calculating Z arrays for bucket 5
  Calculating Z arrays for bucket 6
  Calculating Z arrays for bucket 7
  Entering block accumulator loop for bucket 2:
  Entering block accumulator loop for bucket 3:
  Entering block accumulator loop for bucket 4:
  Entering block accumulator loop for bucket 5:
  Entering block accumulator loop for bucket 6:
  Entering block accumulator loop for bucket 7:
  bucket 1: 10%
  bucket 3: 10%
  bucket 2: 10%
  bucket 4: 10%
  bucket 5: 10%
  bucket 6: 10%
  bucket 7: 10%
  bucket 1: 20%
  bucket 3: 20%
  bucket 2: 20%
  bucket 4: 20%
  bucket 5: 20%
  bucket 6: 20%
  bucket 7: 20%
  bucket 1: 30%
  bucket 3: 30%
  bucket 2: 30%
  bucket 4: 30%
  bucket 5: 30%
  bucket 6: 30%
  bucket 7: 30%
  bucket 1: 40%
  bucket 3: 40%
  bucket 2: 40%
  bucket 4: 40%
  bucket 5: 40%
  bucket 6: 40%
  bucket 1: 50%
  bucket 7: 40%
  bucket 3: 50%
  bucket 2: 50%
  bucket 1: 60%
  bucket 4: 50%
  bucket 5: 50%
  bucket 6: 50%
  bucket 3: 60%
  bucket 2: 60%
  bucket 7: 50%
  bucket 1: 70%
  bucket 4: 60%
  bucket 5: 60%
  bucket 6: 60%
  bucket 3: 70%
  bucket 2: 70%
  bucket 7: 60%
  bucket 1: 80%
  bucket 4: 70%
  bucket 3: 80%
  bucket 2: 80%
  bucket 5: 70%
  bucket 6: 70%
  bucket 1: 90%
  bucket 7: 70%
  bucket 3: 90%
  bucket 4: 80%
  bucket 2: 90%
  bucket 5: 80%
  bucket 1: 100%
  Sorting block of length 82257 for bucket 1
  (Using difference cover)
  bucket 6: 80%
  bucket 7: 80%
  bucket 3: 100%
  Sorting block of length 66141 for bucket 3
  (Using difference cover)
  bucket 2: 100%
  Sorting block of length 106714 for bucket 2
  (Using difference cover)
  bucket 4: 90%
  bucket 5: 90%
  bucket 6: 90%
  bucket 7: 90%
  Sorting block time: 00:00:00
Returning block of 82258 for bucket 1
  bucket 4: 100%
  Sorting block of length 82903 for bucket 4
  (Using difference cover)
Getting block 8 of 59
  Reserving size (108278) for bucket 8
  Calculating Z arrays for bucket 8
  Entering block accumulator loop for bucket 8:
  bucket 5: 100%
  Sorting block of length 100680 for bucket 5
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 66142 for bucket 3
  bucket 6: 100%
  Sorting block of length 73200 for bucket 6
  (Using difference cover)
Getting block 9 of 59
  Reserving size (108278) for bucket 9
  Calculating Z arrays for bucket 9
  Entering block accumulator loop for bucket 9:
  bucket 7: 100%
  Sorting block of length 101027 for bucket 7
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 106715 for bucket 2
Getting block 10 of 59
  Reserving size (108278) for bucket 10
  Calculating Z arrays for bucket 10
  Entering block accumulator loop for bucket 10:
  bucket 8: 10%
  Sorting block time: 00:00:00
Returning block of 82904 for bucket 4
  Sorting block time: 00:00:00
Returning block of 73201 for bucket 6
  bucket 9: 10%
Getting block 11 of 59
  Reserving size (108278) for bucket 11
  Calculating Z arrays for bucket 11
  Entering block accumulator loop for bucket 11:
Getting block 12 of 59
  Reserving size (108278) for bucket 12
  Calculating Z arrays for bucket 12
  Entering block accumulator loop for bucket 12:
  Sorting block time: 00:00:00
Returning block of 100681 for bucket 5
Getting block 13 of 59
  Reserving size (108278) for bucket 13
  Calculating Z arrays for bucket 13
  Entering block accumulator loop for bucket 13:
  Sorting block time: 00:00:00
Returning block of 101028 for bucket 7
Getting block 14 of 59
  Reserving size (108278) for bucket 14
  Calculating Z arrays for bucket 14
  Entering block accumulator loop for bucket 14:
  bucket 10: 10%
  bucket 8: 20%
  bucket 9: 20%
  bucket 11: 10%
  bucket 12: 10%
  bucket 13: 10%
  bucket 14: 10%
  bucket 10: 20%
  bucket 8: 30%
  bucket 9: 30%
  bucket 11: 20%
  bucket 12: 20%
  bucket 13: 20%
  bucket 14: 20%
  bucket 10: 30%
  bucket 8: 40%
  bucket 9: 40%
  bucket 12: 30%
  bucket 11: 30%
  bucket 13: 30%
  bucket 8: 50%
  bucket 14: 30%
  bucket 10: 40%
  bucket 9: 50%
  bucket 12: 40%
  bucket 11: 40%
  bucket 13: 40%
  bucket 8: 60%
  bucket 14: 40%
  bucket 10: 50%
  bucket 9: 60%
  bucket 12: 50%
  bucket 11: 50%
  bucket 8: 70%
  bucket 13: 50%
  bucket 14: 50%
  bucket 10: 60%
  bucket 9: 70%
  bucket 12: 60%
  bucket 11: 60%
  bucket 8: 80%
  bucket 13: 60%
  bucket 14: 60%
  bucket 10: 70%
  bucket 9: 80%
  bucket 12: 70%
  bucket 8: 90%
  bucket 11: 70%
  bucket 13: 70%
  bucket 14: 70%
  bucket 10: 80%
  bucket 9: 90%
  bucket 12: 80%
  bucket 8: 100%
  Sorting block of length 39795 for bucket 8
  (Using difference cover)
  bucket 11: 80%
  bucket 14: 80%
  bucket 10: 90%
  bucket 13: 80%
  bucket 9: 100%
  Sorting block of length 73169 for bucket 9
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 39796 for bucket 8
  bucket 12: 90%
Getting block 15 of 59
  Reserving size (108278) for bucket 15
  Calculating Z arrays for bucket 15
  Entering block accumulator loop for bucket 15:
  bucket 11: 90%
  bucket 14: 90%
  bucket 10: 100%
  Sorting block of length 87026 for bucket 10
  (Using difference cover)
  bucket 13: 90%
  Sorting block time: 00:00:00
Returning block of 73170 for bucket 9
  bucket 12: 100%
  Sorting block of length 56753 for bucket 12
  (Using difference cover)
Getting block 16 of 59
  Reserving size (108278) for bucket 16
  Calculating Z arrays for bucket 16
  Entering block accumulator loop for bucket 16:
  bucket 15: 10%
  bucket 14: 100%
  Sorting block of length 46705 for bucket 14
  (Using difference cover)
  bucket 11: 100%
  Sorting block of length 98194 for bucket 11
  (Using difference cover)
  bucket 13: 100%
  Sorting block of length 94174 for bucket 13
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 87027 for bucket 10
  Sorting block time: 00:00:00
Returning block of 56754 for bucket 12
  Sorting block time: 00:00:00
Returning block of 46706 for bucket 14
Getting block 17 of 59
  Reserving size (108278) for bucket 17
  Calculating Z arrays for bucket 17
  Entering block accumulator loop for bucket 17:
Getting block 18 of 59
  Reserving size (108278) for bucket 18
  Calculating Z arrays for bucket 18
  Entering block accumulator loop for bucket 18:
  bucket 16: 10%
Getting block 19 of 59
  Reserving size (108278) for bucket 19
  Calculating Z arrays for bucket 19
  Entering block accumulator loop for bucket 19:
  bucket 15: 20%
  Sorting block time: 00:00:00
Returning block of 98195 for bucket 11
Getting block 20 of 59
  Reserving size (108278) for bucket 20
  Calculating Z arrays for bucket 20
  Entering block accumulator loop for bucket 20:
  Sorting block time: 00:00:00
Returning block of 94175 for bucket 13
  bucket 17: 10%
Getting block 21 of 59
  Reserving size (108278) for bucket 21
  Calculating Z arrays for bucket 21
  Entering block accumulator loop for bucket 21:
  bucket 16: 20%
  bucket 18: 10%
  bucket 19: 10%
  bucket 15: 30%
  bucket 20: 10%
  bucket 16: 30%
  bucket 21: 10%
  bucket 17: 20%
  bucket 18: 20%
  bucket 19: 20%
  bucket 15: 40%
  bucket 20: 20%
  bucket 16: 40%
  bucket 21: 20%
  bucket 17: 30%
  bucket 18: 30%
  bucket 19: 30%
  bucket 15: 50%
  bucket 20: 30%
  bucket 16: 50%
  bucket 21: 30%
  bucket 17: 40%
  bucket 18: 40%
  bucket 19: 40%
  bucket 15: 60%
  bucket 20: 40%
  bucket 16: 60%
  bucket 21: 40%
  bucket 17: 50%
  bucket 18: 50%
  bucket 19: 50%
  bucket 20: 50%
  bucket 15: 70%
  bucket 16: 70%
  bucket 21: 50%
  bucket 17: 60%
  bucket 19: 60%
  bucket 18: 60%
  bucket 20: 60%
  bucket 15: 80%
  bucket 16: 80%
  bucket 21: 60%
  bucket 17: 70%
  bucket 19: 70%
  bucket 18: 70%
  bucket 20: 70%
  bucket 16: 90%
  bucket 15: 90%
  bucket 21: 70%
  bucket 19: 80%
  bucket 17: 80%
  bucket 18: 80%
  bucket 20: 80%
  bucket 16: 100%
  Sorting block of length 56789 for bucket 16
  (Using difference cover)
  bucket 15: 100%
  Sorting block of length 101417 for bucket 15
  (Using difference cover)
  bucket 21: 80%
  bucket 19: 90%
  bucket 17: 90%
  bucket 18: 90%
  bucket 20: 90%
  Sorting block time: 00:00:00
Returning block of 56790 for bucket 16
Getting block 22 of 59
  Reserving size (108278) for bucket 22
  Calculating Z arrays for bucket 22
  Entering block accumulator loop for bucket 22:
  bucket 21: 90%
  bucket 19: 100%
  Sorting block of length 76383 for bucket 19
  (Using difference cover)
  bucket 18: 100%
  Sorting block of length 65514 for bucket 18
  (Using difference cover)
  bucket 17: 100%
  Sorting block of length 100785 for bucket 17
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 101418 for bucket 15
  bucket 20: 100%
  Sorting block of length 59476 for bucket 20
  (Using difference cover)
Getting block 23 of 59
  Reserving size (108278) for bucket 23
  Calculating Z arrays for bucket 23
  Entering block accumulator loop for bucket 23:
  bucket 22: 10%
  bucket 21: 100%
  Sorting block of length 78119 for bucket 21
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 65515 for bucket 18
  Sorting block time: 00:00:00
Returning block of 76384 for bucket 19
Getting block 24 of 59
  Reserving size (108278) for bucket 24
  Calculating Z arrays for bucket 24
  Entering block accumulator loop for bucket 24:
  Sorting block time: 00:00:00
Returning block of 59477 for bucket 20
Getting block 25 of 59
  Reserving size (108278) for bucket 25
  Calculating Z arrays for bucket 25
  Entering block accumulator loop for bucket 25:
Getting block 26 of 59
  Reserving size (108278) for bucket 26
  Calculating Z arrays for bucket 26
  Entering block accumulator loop for bucket 26:
  Sorting block time: 00:00:00
Returning block of 100786 for bucket 17
Getting block 27 of 59
  Reserving size (108278) for bucket 27
  Calculating Z arrays for bucket 27
  Entering block accumulator loop for bucket 27:
  Sorting block time: 00:00:00
Returning block of 78120 for bucket 21
  bucket 22: 20%
  bucket 23: 10%
Getting block 28 of 59
  Reserving size (108278) for bucket 28
  Calculating Z arrays for bucket 28
  Entering block accumulator loop for bucket 28:
  bucket 24: 10%
  bucket 25: 10%
  bucket 26: 10%
  bucket 27: 10%
  bucket 22: 30%
  bucket 23: 20%
  bucket 28: 10%
  bucket 24: 20%
  bucket 25: 20%
  bucket 26: 20%
  bucket 27: 20%
  bucket 22: 40%
  bucket 23: 30%
  bucket 28: 20%
  bucket 24: 30%
  bucket 25: 30%
  bucket 26: 30%
  bucket 22: 50%
  bucket 27: 30%
  bucket 23: 40%
  bucket 28: 30%
  bucket 24: 40%
  bucket 25: 40%
  bucket 26: 40%
  bucket 22: 60%
  bucket 23: 50%
  bucket 27: 40%
  bucket 28: 40%
  bucket 24: 50%
  bucket 25: 50%
  bucket 22: 70%
  bucket 26: 50%
  bucket 23: 60%
  bucket 27: 50%
  bucket 28: 50%
  bucket 24: 60%
  bucket 25: 60%
  bucket 22: 80%
  bucket 23: 70%
  bucket 26: 60%
  bucket 27: 60%
  bucket 28: 60%
  bucket 24: 70%
  bucket 25: 70%
  bucket 22: 90%
  bucket 23: 80%
  bucket 26: 70%
  bucket 27: 70%
  bucket 28: 70%
  bucket 24: 80%
  bucket 25: 80%
  bucket 22: 100%
  Sorting block of length 103578 for bucket 22
  (Using difference cover)
  bucket 23: 90%
  bucket 26: 80%
  bucket 28: 80%
  bucket 27: 80%
  bucket 24: 90%
  bucket 25: 90%
  bucket 23: 100%
  Sorting block of length 103599 for bucket 23
  (Using difference cover)
  bucket 26: 90%
  bucket 28: 90%
  bucket 27: 90%
  bucket 24: 100%
  Sorting block of length 100261 for bucket 24
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 103579 for bucket 22
  bucket 25: 100%
  Sorting block of length 90473 for bucket 25
  (Using difference cover)
Getting block 29 of 59
  Reserving size (108278) for bucket 29
  Calculating Z arrays for bucket 29
  Entering block accumulator loop for bucket 29:
  Sorting block time: 00:00:00
Returning block of 103600 for bucket 23
  bucket 28: 100%
  Sorting block of length 23531 for bucket 28
  (Using difference cover)
  bucket 26: 100%
  Sorting block of length 98627 for bucket 26
  (Using difference cover)
  bucket 27: 100%
  Sorting block of length 99064 for bucket 27
  (Using difference cover)
Getting block 30 of 59
  Reserving size (108278) for bucket 30
  Calculating Z arrays for bucket 30
  Entering block accumulator loop for bucket 30:
  Sorting block time: 00:00:00
Returning block of 23532 for bucket 28
  Sorting block time: 00:00:00
Returning block of 100262 for bucket 24
Getting block 31 of 59
  Reserving size (108278) for bucket 31
  Calculating Z arrays for bucket 31
  Entering block accumulator loop for bucket 31:
  Sorting block time: 00:00:00
Returning block of 90474 for bucket 25
  bucket 29: 10%
Getting block 32 of 59
  Reserving size (108278) for bucket 32
  Calculating Z arrays for bucket 32
  Entering block accumulator loop for bucket 32:
Getting block 33 of 59
  Reserving size (108278) for bucket 33
  Calculating Z arrays for bucket 33
  Entering block accumulator loop for bucket 33:
  Sorting block time: 00:00:00
Returning block of 98628 for bucket 26
  Sorting block time: 00:00:00
Returning block of 99065 for bucket 27
Getting block 34 of 59
  Reserving size (108278) for bucket 34
  Calculating Z arrays for bucket 34
  Entering block accumulator loop for bucket 34:
Getting block 35 of 59
  Reserving size (108278) for bucket 35
  Calculating Z arrays for bucket 35
  Entering block accumulator loop for bucket 35:
  bucket 30: 10%
  bucket 31: 10%
  bucket 32: 10%
  bucket 33: 10%
  bucket 29: 20%
  bucket 34: 10%
  bucket 35: 10%
  bucket 30: 20%
  bucket 31: 20%
  bucket 32: 20%
  bucket 33: 20%
  bucket 29: 30%
  bucket 30: 30%
  bucket 34: 20%
  bucket 35: 20%
  bucket 31: 30%
  bucket 32: 30%
  bucket 33: 30%
  bucket 29: 40%
  bucket 30: 40%
  bucket 34: 30%
  bucket 31: 40%
  bucket 35: 30%
  bucket 32: 40%
  bucket 33: 40%
  bucket 29: 50%
  bucket 30: 50%
  bucket 31: 50%
  bucket 34: 40%
  bucket 35: 40%
  bucket 32: 50%
  bucket 33: 50%
  bucket 29: 60%
  bucket 30: 60%
  bucket 31: 60%
  bucket 34: 50%
  bucket 35: 50%
  bucket 32: 60%
  bucket 33: 60%
  bucket 29: 70%
  bucket 31: 70%
  bucket 30: 70%
  bucket 34: 60%
  bucket 35: 60%
  bucket 32: 70%
  bucket 33: 70%
  bucket 31: 80%
  bucket 30: 80%
  bucket 29: 80%
  bucket 32: 80%
  bucket 34: 70%
  bucket 35: 70%
  bucket 33: 80%
  bucket 31: 90%
  bucket 30: 90%
  bucket 29: 90%
  bucket 32: 90%
  bucket 34: 80%
  bucket 35: 80%
  bucket 33: 90%
  bucket 31: 100%
  Sorting block of length 17233 for bucket 31
  (Using difference cover)
  bucket 30: 100%
  Sorting block of length 97335 for bucket 30
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 17234 for bucket 31
  bucket 29: 100%
  Sorting block of length 98315 for bucket 29
  (Using difference cover)
Getting block 36 of 59
  Reserving size (108278) for bucket 36
  Calculating Z arrays for bucket 36
  Entering block accumulator loop for bucket 36:
  bucket 32: 100%
  Sorting block of length 93003 for bucket 32
  (Using difference cover)
  bucket 34: 90%
  bucket 35: 90%
  bucket 33: 100%
  Sorting block of length 23173 for bucket 33
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 23174 for bucket 33
Getting block 37 of 59
  Reserving size (108278) for bucket 37
  Calculating Z arrays for bucket 37
  Entering block accumulator loop for bucket 37:
  bucket 36: 10%
  bucket 34: 100%
  Sorting block of length 86289 for bucket 34
  (Using difference cover)
  bucket 35: 100%
  Sorting block of length 103296 for bucket 35
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 97336 for bucket 30
Getting block 38 of 59
  Reserving size (108278) for bucket 38
  Calculating Z arrays for bucket 38
  Entering block accumulator loop for bucket 38:
  Sorting block time: 00:00:00
Returning block of 93004 for bucket 32
  Sorting block time: 00:00:00
Returning block of 98316 for bucket 29
  bucket 37: 10%
Getting block 39 of 59
  Reserving size (108278) for bucket 39
  Calculating Z arrays for bucket 39
  Entering block accumulator loop for bucket 39:
Getting block 40 of 59
  Reserving size (108278) for bucket 40
  Calculating Z arrays for bucket 40
  Entering block accumulator loop for bucket 40:
  bucket 36: 20%
  Sorting block time: 00:00:00
Returning block of 86290 for bucket 34
Getting block 41 of 59
  Reserving size (108278) for bucket 41
  Calculating Z arrays for bucket 41
  Entering block accumulator loop for bucket 41:
  Sorting block time: 00:00:00
Returning block of 103297 for bucket 35
  bucket 38: 10%
Getting block 42 of 59
  Reserving size (108278) for bucket 42
  Calculating Z arrays for bucket 42
  Entering block accumulator loop for bucket 42:
  bucket 39: 10%
  bucket 37: 20%
  bucket 40: 10%
  bucket 36: 30%
  bucket 41: 10%
  bucket 38: 20%
  bucket 42: 10%
  bucket 39: 20%
  bucket 37: 30%
  bucket 40: 20%
  bucket 36: 40%
  bucket 41: 20%
  bucket 38: 30%
  bucket 39: 30%
  bucket 40: 30%
  bucket 42: 20%
  bucket 37: 40%
  bucket 36: 50%
  bucket 38: 40%
  bucket 41: 30%
  bucket 39: 40%
  bucket 40: 40%
  bucket 37: 50%
  bucket 42: 30%
  bucket 36: 60%
  bucket 38: 50%
  bucket 41: 40%
  bucket 39: 50%
  bucket 40: 50%
  bucket 37: 60%
  bucket 42: 40%
  bucket 36: 70%
  bucket 38: 60%
  bucket 41: 50%
  bucket 39: 60%
  bucket 40: 60%
  bucket 37: 70%
  bucket 42: 50%
  bucket 36: 80%
  bucket 38: 70%
  bucket 39: 70%
  bucket 40: 70%
  bucket 41: 60%
  bucket 37: 80%
  bucket 42: 60%
  bucket 36: 90%
  bucket 38: 80%
  bucket 39: 80%
  bucket 40: 80%
  bucket 41: 70%
  bucket 37: 90%
  bucket 42: 70%
  bucket 36: 100%
  Sorting block of length 87348 for bucket 36
  (Using difference cover)
  bucket 38: 90%
  bucket 39: 90%
  bucket 40: 90%
  bucket 41: 80%
  bucket 37: 100%
  Sorting block of length 104085 for bucket 37
  (Using difference cover)
  bucket 42: 80%
  bucket 38: 100%
  Sorting block of length 78729 for bucket 38
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 87349 for bucket 36
  bucket 39: 100%
  Sorting block of length 45133 for bucket 39
  (Using difference cover)
  bucket 40: 100%
  Sorting block of length 78757 for bucket 40
  (Using difference cover)
Getting block 43 of 59
  Reserving size (108278) for bucket 43
  Calculating Z arrays for bucket 43
  Entering block accumulator loop for bucket 43:
  bucket 41: 90%
  Sorting block time: 00:00:00
Returning block of 45134 for bucket 39
Getting block 44 of 59
  Reserving size (108278) for bucket 44
  Calculating Z arrays for bucket 44
  Entering block accumulator loop for bucket 44:
  bucket 42: 90%
  Sorting block time: 00:00:00
Returning block of 104086 for bucket 37
  Sorting block time: 00:00:00
Returning block of 78730 for bucket 38
Getting block 45 of 59
  Reserving size (108278) for bucket 45
  Calculating Z arrays for bucket 45
  Entering block accumulator loop for bucket 45:
Getting block 46 of 59
  Reserving size (108278) for bucket 46
  Calculating Z arrays for bucket 46
  Entering block accumulator loop for bucket 46:
  Sorting block time: 00:00:00
Returning block of 78758 for bucket 40
Getting block 47 of 59
  Reserving size (108278) for bucket 47
  Calculating Z arrays for bucket 47
  Entering block accumulator loop for bucket 47:
  bucket 43: 10%
  bucket 41: 100%
  Sorting block of length 101741 for bucket 41
  (Using difference cover)
  bucket 42: 100%
  Sorting block of length 78164 for bucket 42
  (Using difference cover)
  bucket 44: 10%
  bucket 45: 10%
  bucket 46: 10%
  Sorting block time: 00:00:00
Returning block of 101742 for bucket 41
Getting block 48 of 59
  Reserving size (108278) for bucket 48
  Calculating Z arrays for bucket 48
  Entering block accumulator loop for bucket 48:
  bucket 47: 10%
  Sorting block time: 00:00:00
Returning block of 78165 for bucket 42
  bucket 43: 20%
Getting block 49 of 59
  Reserving size (108278) for bucket 49
  Calculating Z arrays for bucket 49
  Entering block accumulator loop for bucket 49:
  bucket 45: 20%
  bucket 44: 20%
  bucket 46: 20%
  bucket 47: 20%
  bucket 48: 10%
  bucket 43: 30%
  bucket 49: 10%
  bucket 45: 30%
  bucket 46: 30%
  bucket 44: 30%
  bucket 47: 30%
  bucket 48: 20%
  bucket 43: 40%
  bucket 49: 20%
  bucket 45: 40%
  bucket 46: 40%
  bucket 44: 40%
  bucket 47: 40%
  bucket 48: 30%
  bucket 43: 50%
  bucket 49: 30%
  bucket 46: 50%
  bucket 45: 50%
  bucket 47: 50%
  bucket 44: 50%
  bucket 48: 40%
  bucket 43: 60%
  bucket 49: 40%
  bucket 46: 60%
  bucket 45: 60%
  bucket 47: 60%
  bucket 48: 50%
  bucket 44: 60%
  bucket 43: 70%
  bucket 46: 70%
  bucket 45: 70%
  bucket 49: 50%
  bucket 47: 70%
  bucket 48: 60%
  bucket 44: 70%
  bucket 46: 80%
  bucket 45: 80%
  bucket 43: 80%
  bucket 49: 60%
  bucket 47: 80%
  bucket 48: 70%
  bucket 46: 90%
  bucket 45: 90%
  bucket 44: 80%
  bucket 43: 90%
  bucket 49: 70%
  bucket 47: 90%
  bucket 46: 100%
  Sorting block of length 51003 for bucket 46
  (Using difference cover)
  bucket 45: 100%
  Sorting block of length 88949 for bucket 45
  (Using difference cover)
  bucket 48: 80%
  bucket 43: 100%
  Sorting block of length 37498 for bucket 43
  (Using difference cover)
  bucket 44: 90%
  bucket 49: 80%
  bucket 47: 100%
  Sorting block of length 77153 for bucket 47
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 51004 for bucket 46
  Sorting block time: 00:00:00
Returning block of 37499 for bucket 43
Getting block 50 of 59
  Reserving size (108278) for bucket 50
  Calculating Z arrays for bucket 50
  Entering block accumulator loop for bucket 50:
Getting block 51 of 59
  Reserving size (108278) for bucket 51
  Calculating Z arrays for bucket 51
  Entering block accumulator loop for bucket 51:
  bucket 48: 90%
  Sorting block time: 00:00:00
Returning block of 88950 for bucket 45
  bucket 49: 90%
  bucket 44: 100%
  Sorting block of length 99654 for bucket 44
  (Using difference cover)
Getting block 52 of 59
  Reserving size (108278) for bucket 52
  Calculating Z arrays for bucket 52
  Entering block accumulator loop for bucket 52:
  Sorting block time: 00:00:00
Returning block of 77154 for bucket 47
Getting block 53 of 59
  Reserving size (108278) for bucket 53
  Calculating Z arrays for bucket 53
  Entering block accumulator loop for bucket 53:
  bucket 50: 10%
  bucket 51: 10%
  bucket 48: 100%
  Sorting block of length 90714 for bucket 48
  (Using difference cover)
  bucket 49: 100%
  Sorting block of length 75430 for bucket 49
  (Using difference cover)
  bucket 52: 10%
  bucket 53: 10%
  Sorting block time: 00:00:00
Returning block of 99655 for bucket 44
  bucket 50: 20%
  bucket 51: 20%
Getting block 54 of 59
  Reserving size (108278) for bucket 54
  Calculating Z arrays for bucket 54
  Entering block accumulator loop for bucket 54:
  bucket 52: 20%
  Sorting block time: 00:00:00
Returning block of 90715 for bucket 48
  Sorting block time: 00:00:00
Returning block of 75431 for bucket 49
Getting block 55 of 59
  Reserving size (108278) for bucket 55
  Calculating Z arrays for bucket 55
  Entering block accumulator loop for bucket 55:
Getting block 56 of 59
  Reserving size (108278) for bucket 56
  Calculating Z arrays for bucket 56
  Entering block accumulator loop for bucket 56:
  bucket 53: 20%
  bucket 50: 30%
  bucket 51: 30%
  bucket 54: 10%
  bucket 52: 30%
  bucket 56: 10%
  bucket 55: 10%
  bucket 53: 30%
  bucket 50: 40%
  bucket 51: 40%
  bucket 54: 20%
  bucket 52: 40%
  bucket 56: 20%
  bucket 55: 20%
  bucket 53: 40%
  bucket 50: 50%
  bucket 51: 50%
  bucket 54: 30%
  bucket 52: 50%
  bucket 56: 30%
  bucket 55: 30%
  bucket 50: 60%
  bucket 53: 50%
  bucket 51: 60%
  bucket 54: 40%
  bucket 56: 40%
  bucket 52: 60%
  bucket 55: 40%
  bucket 50: 70%
  bucket 53: 60%
  bucket 51: 70%
  bucket 54: 50%
  bucket 56: 50%
  bucket 52: 70%
  bucket 55: 50%
  bucket 50: 80%
  bucket 53: 70%
  bucket 51: 80%
  bucket 54: 60%
  bucket 56: 60%
  bucket 52: 80%
  bucket 55: 60%
  bucket 50: 90%
  bucket 53: 80%
  bucket 51: 90%
  bucket 54: 70%
  bucket 56: 70%
  bucket 52: 90%
  bucket 55: 70%
  bucket 50: 100%
  Sorting block of length 41182 for bucket 50
  (Using difference cover)
  bucket 53: 90%
  bucket 51: 100%
  Sorting block of length 67203 for bucket 51
  (Using difference cover)
  bucket 54: 80%
  bucket 56: 80%
  Sorting block time: 00:00:00
Returning block of 41183 for bucket 50
  bucket 52: 100%
  Sorting block of length 87746 for bucket 52
  (Using difference cover)
Getting block 57 of 59
  Reserving size (108278) for bucket 57
  Calculating Z arrays for bucket 57
  Entering block accumulator loop for bucket 57:
  bucket 55: 80%
  bucket 53: 100%
  Sorting block of length 74639 for bucket 53
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 67204 for bucket 51
Getting block 58 of 59
  Reserving size (108278) for bucket 58
  Calculating Z arrays for bucket 58
  Entering block accumulator loop for bucket 58:
  bucket 54: 90%
  bucket 56: 90%
  Sorting block time: 00:00:00
Returning block of 87747 for bucket 52
  bucket 57: 10%
Getting block 59 of 59
  Reserving size (108278) for bucket 59
  Calculating Z arrays for bucket 59
  Entering block accumulator loop for bucket 59:
  bucket 55: 90%
  Sorting block time: 00:00:00
Returning block of 74640 for bucket 53
  bucket 58: 10%
  bucket 59: 10%
  bucket 56: 100%
  Sorting block of length 57844 for bucket 56
  (Using difference cover)
  bucket 54: 100%
  Sorting block of length 90303 for bucket 54
  (Using difference cover)
  bucket 57: 20%
  bucket 55: 100%
  Sorting block of length 93968 for bucket 55
  (Using difference cover)
  bucket 59: 20%
  bucket 58: 20%
  Sorting block time: 00:00:00
Returning block of 57845 for bucket 56
  bucket 59: 30%
  bucket 57: 30%
  Sorting block time: 00:00:00
Returning block of 90304 for bucket 54
  bucket 58: 30%
  bucket 59: 40%
  Sorting block time: 00:00:00
Returning block of 93969 for bucket 55
  bucket 57: 40%
  bucket 59: 50%
  bucket 58: 40%
  bucket 59: 60%
  bucket 57: 50%
  bucket 59: 70%
  bucket 58: 50%
  bucket 59: 80%
  bucket 57: 60%
  bucket 58: 60%
  bucket 59: 90%
  bucket 57: 70%
  bucket 59: 100%
  Sorting block of length 101034 for bucket 59
  (Using difference cover)
  bucket 58: 70%
  bucket 57: 80%
  bucket 58: 80%
  Sorting block time: 00:00:00
Returning block of 101035 for bucket 59
  bucket 57: 90%
  bucket 58: 90%
  bucket 57: 100%
  Sorting block of length 90897 for bucket 57
  (Using difference cover)
  bucket 58: 100%
  Sorting block of length 35612 for bucket 58
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 35613 for bucket 58
  Sorting block time: 00:00:00
Returning block of 90898 for bucket 57
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 1137388
fchr[G]: 2312030
fchr[T]: 3483418
fchr[$]: 4619842
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 5737252 bytes to primary EBWT file: GCF_000005845.2_ASM584v2_genomic_masked.1.bt2
Wrote 1154968 bytes to secondary EBWT file: GCF_000005845.2_ASM584v2_genomic_masked.2.bt2
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 4619842
    bwtLen: 4619843
    sz: 1154961
    bwtSz: 1154961
    lineRate: 6
    offRate: 4
    offMask: 0xfffffff0
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 288741
    offsSz: 1154964
    lineSz: 64
    sideSz: 64
    sideBwtSz: 48
    sideBwtLen: 192
    numSides: 24062
    numLines: 24062
    ebwtTotLen: 1539968
    ebwtTotSz: 1539968
    color: 0
    reverse: 0
Total time for call to driver() for forward index: 00:00:02
Reading reference sizes
  Time reading reference sizes: 00:00:00
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:00
  Time to reverse reference sequence: 00:00:00
bmax according to bmaxDivN setting: 144370
Using parameters --bmax 108278 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 108278 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:00
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:00
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:00
  Sanity-checking and returning
Building samples
Reserving space for 86 sample suffixes
Generating random suffixes
QSorting 86 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 86 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
Splitting and merging
  Splitting and merging time: 00:00:00
Split 12, merged 37; iterating...
Splitting and merging
  Splitting and merging time: 00:00:00
Split 4, merged 8; iterating...
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 2; iterating...
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 0; iterating...
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 79651.5 (target: 108277)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 58
  Reserving size (108278) for bucket 1
Getting block 2 of 58
  Calculating Z arrays for bucket 1
  Reserving size (108278) for bucket 2
Getting block 3 of 58
Getting block 4 of 58
Getting block 5 of 58
  Entering block accumulator loop for bucket 1:
  Reserving size (108278) for bucket 3
  Calculating Z arrays for bucket 2
  Reserving size (108278) for bucket 4
  Reserving size (108278) for bucket 5
Getting block 6 of 58
Getting block 7 of 58
  Calculating Z arrays for bucket 3
  Calculating Z arrays for bucket 4
  Calculating Z arrays for bucket 5
  Entering block accumulator loop for bucket 2:
  Reserving size (108278) for bucket 6
  Reserving size (108278) for bucket 7
  Calculating Z arrays for bucket 6
  Calculating Z arrays for bucket 7
  Entering block accumulator loop for bucket 3:
  Entering block accumulator loop for bucket 4:
  Entering block accumulator loop for bucket 5:
  Entering block accumulator loop for bucket 6:
  Entering block accumulator loop for bucket 7:
  bucket 1: 10%
  bucket 2: 10%
  bucket 3: 10%
  bucket 4: 10%
  bucket 5: 10%
  bucket 6: 10%
  bucket 7: 10%
  bucket 1: 20%
  bucket 2: 20%
  bucket 3: 20%
  bucket 4: 20%
  bucket 5: 20%
  bucket 6: 20%
  bucket 7: 20%
  bucket 1: 30%
  bucket 2: 30%
  bucket 3: 30%
  bucket 4: 30%
  bucket 5: 30%
  bucket 6: 30%
  bucket 1: 40%
  bucket 7: 30%
  bucket 2: 40%
  bucket 4: 40%
  bucket 3: 40%
  bucket 5: 40%
  bucket 1: 50%
  bucket 6: 40%
  bucket 7: 40%
  bucket 2: 50%
  bucket 4: 50%
  bucket 3: 50%
  bucket 1: 60%
  bucket 5: 50%
  bucket 6: 50%
  bucket 2: 60%
  bucket 7: 50%
  bucket 1: 70%
  bucket 4: 60%
  bucket 3: 60%
  bucket 5: 60%
  bucket 2: 70%
  bucket 6: 60%
  bucket 1: 80%
  bucket 7: 60%
  bucket 4: 70%
  bucket 3: 70%
  bucket 5: 70%
  bucket 1: 90%
  bucket 2: 80%
  bucket 6: 70%
  bucket 4: 80%
  bucket 3: 80%
  bucket 7: 70%
  bucket 5: 80%
  bucket 1: 100%
  Sorting block of length 45154 for bucket 1
  (Using difference cover)
  bucket 2: 90%
  bucket 6: 80%
  bucket 4: 90%
  bucket 3: 90%
  bucket 5: 90%
  bucket 7: 80%
  Sorting block time: 00:00:00
Returning block of 45155 for bucket 1
  bucket 2: 100%
  Sorting block of length 82213 for bucket 2
  (Using difference cover)
Getting block 8 of 58
  Reserving size (108278) for bucket 8
  Calculating Z arrays for bucket 8
  Entering block accumulator loop for bucket 8:
  bucket 6: 90%
  bucket 4: 100%
  Sorting block of length 92620 for bucket 4
  (Using difference cover)
  bucket 3: 100%
  Sorting block of length 62349 for bucket 3
  (Using difference cover)
  bucket 5: 100%
  Sorting block of length 67182 for bucket 5
  (Using difference cover)
  bucket 7: 90%
  bucket 8: 10%
  Sorting block time: 00:00:00
Returning block of 82214 for bucket 2
  bucket 6: 100%
  Sorting block of length 106152 for bucket 6
  (Using difference cover)
Getting block 9 of 58
  Reserving size (108278) for bucket 9
  Calculating Z arrays for bucket 9
  Entering block accumulator loop for bucket 9:
  Sorting block time: 00:00:00
Returning block of 62350 for bucket 3
  bucket 7: 100%
  Sorting block of length 102095 for bucket 7
  (Using difference cover)
Getting block 10 of 58
  Reserving size (108278) for bucket 10
  Calculating Z arrays for bucket 10
  Entering block accumulator loop for bucket 10:
  Sorting block time: 00:00:00
Returning block of 67183 for bucket 5
  bucket 8: 20%
Getting block 11 of 58
  Reserving size (108278) for bucket 11
  Calculating Z arrays for bucket 11
  Entering block accumulator loop for bucket 11:
  Sorting block time: 00:00:00
Returning block of 92621 for bucket 4
Getting block 12 of 58
  Reserving size (108278) for bucket 12
  Calculating Z arrays for bucket 12
  Entering block accumulator loop for bucket 12:
  bucket 9: 10%
  Sorting block time: 00:00:00
Returning block of 106153 for bucket 6
Getting block 13 of 58
  Reserving size (108278) for bucket 13
  Calculating Z arrays for bucket 13
  Entering block accumulator loop for bucket 13:
  Sorting block time: 00:00:00
Returning block of 102096 for bucket 7
  bucket 8: 30%
  bucket 10: 10%
  bucket 11: 10%
Getting block 14 of 58
  Reserving size (108278) for bucket 14
  Calculating Z arrays for bucket 14
  Entering block accumulator loop for bucket 14:
  bucket 12: 10%
  bucket 9: 20%
  bucket 8: 40%
  bucket 13: 10%
  bucket 10: 20%
  bucket 11: 20%
  bucket 14: 10%
  bucket 12: 20%
  bucket 9: 30%
  bucket 8: 50%
  bucket 13: 20%
  bucket 10: 30%
  bucket 11: 30%
  bucket 14: 20%
  bucket 12: 30%
  bucket 9: 40%
  bucket 8: 60%
  bucket 13: 30%
  bucket 10: 40%
  bucket 11: 40%
  bucket 14: 30%
  bucket 12: 40%
  bucket 9: 50%
  bucket 8: 70%
  bucket 13: 40%
  bucket 11: 50%
  bucket 10: 50%
  bucket 14: 40%
  bucket 12: 50%
  bucket 9: 60%
  bucket 8: 80%
  bucket 11: 60%
  bucket 13: 50%
  bucket 14: 50%
  bucket 10: 60%
  bucket 12: 60%
  bucket 8: 90%
  bucket 9: 70%
  bucket 11: 70%
  bucket 14: 60%
  bucket 13: 60%
  bucket 10: 70%
  bucket 8: 100%
  Sorting block of length 90299 for bucket 8
  (Using difference cover)
  bucket 9: 80%
  bucket 12: 70%
  bucket 11: 80%
  bucket 14: 70%
  bucket 13: 70%
  bucket 10: 80%
  bucket 9: 90%
  bucket 12: 80%
  bucket 11: 90%
  bucket 14: 80%
  bucket 13: 80%
  bucket 10: 90%
  Sorting block time: 00:00:00
Returning block of 90300 for bucket 8
  bucket 9: 100%
  Sorting block of length 76796 for bucket 9
  (Using difference cover)
Getting block 15 of 58
  Reserving size (108278) for bucket 15
  Calculating Z arrays for bucket 15
  Entering block accumulator loop for bucket 15:
  bucket 12: 90%
  bucket 11: 100%
  Sorting block of length 58739 for bucket 11
  (Using difference cover)
  bucket 14: 90%
  bucket 10: 100%
  Sorting block of length 108236 for bucket 10
  (Using difference cover)
  bucket 13: 90%
  Sorting block time: 00:00:00
Returning block of 76797 for bucket 9
  bucket 15: 10%
  bucket 12: 100%
  Sorting block of length 84204 for bucket 12
  (Using difference cover)
Getting block 16 of 58
  Reserving size (108278) for bucket 16
  Calculating Z arrays for bucket 16
  Entering block accumulator loop for bucket 16:
  Sorting block time: 00:00:00
Returning block of 58740 for bucket 11
  bucket 14: 100%
  Sorting block of length 55488 for bucket 14
  (Using difference cover)
Getting block 17 of 58
  Reserving size (108278) for bucket 17
  Calculating Z arrays for bucket 17
  Entering block accumulator loop for bucket 17:
  bucket 13: 100%
  Sorting block of length 87877 for bucket 13
  (Using difference cover)
  bucket 15: 20%
  bucket 16: 10%
  Sorting block time: 00:00:00
Returning block of 84205 for bucket 12
  Sorting block time: 00:00:00
Returning block of 55489 for bucket 14
  Sorting block time: 00:00:00
Returning block of 108237 for bucket 10
Getting block 18 of 58
  Reserving size (108278) for bucket 18
  Calculating Z arrays for bucket 18
  Entering block accumulator loop for bucket 18:
Getting block 19 of 58
  Reserving size (108278) for bucket 19
  Calculating Z arrays for bucket 19
  Entering block accumulator loop for bucket 19:
  bucket 17: 10%
Getting block 20 of 58
  Reserving size (108278) for bucket 20
  Calculating Z arrays for bucket 20
  Entering block accumulator loop for bucket 20:
  Sorting block time: 00:00:00
Returning block of 87878 for bucket 13
  bucket 15: 30%
Getting block 21 of 58
  Reserving size (108278) for bucket 21
  Calculating Z arrays for bucket 21
  Entering block accumulator loop for bucket 21:
  bucket 16: 20%
  bucket 18: 10%
  bucket 19: 10%
  bucket 17: 20%
  bucket 20: 10%
  bucket 15: 40%
  bucket 21: 10%
  bucket 16: 30%
  bucket 18: 20%
  bucket 19: 20%
  bucket 17: 30%
  bucket 20: 20%
  bucket 15: 50%
  bucket 21: 20%
  bucket 16: 40%
  bucket 18: 30%
  bucket 19: 30%
  bucket 17: 40%
  bucket 20: 30%
  bucket 15: 60%
  bucket 16: 50%
  bucket 21: 30%
  bucket 18: 40%
  bucket 19: 40%
  bucket 17: 50%
  bucket 20: 40%
  bucket 15: 70%
  bucket 16: 60%
  bucket 21: 40%
  bucket 18: 50%
  bucket 19: 50%
  bucket 17: 60%
  bucket 20: 50%
  bucket 15: 80%
  bucket 16: 70%
  bucket 21: 50%
  bucket 18: 60%
  bucket 19: 60%
  bucket 17: 70%
  bucket 20: 60%
  bucket 15: 90%
  bucket 16: 80%
  bucket 21: 60%
  bucket 19: 70%
  bucket 17: 80%
  bucket 18: 70%
  bucket 20: 70%
  bucket 15: 100%
  Sorting block of length 101513 for bucket 15
  (Using difference cover)
  bucket 16: 90%
  bucket 21: 70%
  bucket 17: 90%
  bucket 19: 80%
  bucket 18: 80%
  bucket 20: 80%
  bucket 16: 100%
  Sorting block of length 83095 for bucket 16
  (Using difference cover)
  bucket 17: 100%
  Sorting block of length 29505 for bucket 17
  (Using difference cover)
  bucket 19: 90%
  bucket 21: 80%
  bucket 18: 90%
  bucket 20: 90%
  Sorting block time: 00:00:00
Returning block of 101514 for bucket 15
  Sorting block time: 00:00:00
Returning block of 29506 for bucket 17
Getting block 22 of 58
  Reserving size (108278) for bucket 22
  Calculating Z arrays for bucket 22
  Entering block accumulator loop for bucket 22:
Getting block 23 of 58
  Reserving size (108278) for bucket 23
  Calculating Z arrays for bucket 23
  Entering block accumulator loop for bucket 23:
  bucket 19: 100%
  Sorting block of length 72891 for bucket 19
  (Using difference cover)
  bucket 18: 100%
  Sorting block of length 85261 for bucket 18
  (Using difference cover)
  bucket 21: 90%
  Sorting block time: 00:00:00
Returning block of 83096 for bucket 16
Getting block 24 of 58
  Reserving size (108278) for bucket 24
  Calculating Z arrays for bucket 24
  Entering block accumulator loop for bucket 24:
  bucket 20: 100%
  Sorting block of length 84104 for bucket 20
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 72892 for bucket 19
  bucket 22: 10%
Getting block 25 of 58
  Reserving size (108278) for bucket 25
  Calculating Z arrays for bucket 25
  Entering block accumulator loop for bucket 25:
  Sorting block time: 00:00:00
Returning block of 85262 for bucket 18
Getting block 26 of 58
  Reserving size (108278) for bucket 26
  Calculating Z arrays for bucket 26
  Entering block accumulator loop for bucket 26:
  bucket 23: 10%
  bucket 21: 100%
  Sorting block of length 73026 for bucket 21
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 84105 for bucket 20
Getting block 27 of 58
  Reserving size (108278) for bucket 27
  Calculating Z arrays for bucket 27
  Entering block accumulator loop for bucket 27:
  bucket 24: 10%
  Sorting block time: 00:00:00
Returning block of 73027 for bucket 21
Getting block 28 of 58
  Reserving size (108278) for bucket 28
  Calculating Z arrays for bucket 28
  Entering block accumulator loop for bucket 28:
  bucket 22: 20%
  bucket 25: 10%
  bucket 23: 20%
  bucket 26: 10%
  bucket 27: 10%
  bucket 24: 20%
  bucket 28: 10%
  bucket 22: 30%
  bucket 23: 30%
  bucket 25: 20%
  bucket 26: 20%
  bucket 27: 20%
  bucket 24: 30%
  bucket 28: 20%
  bucket 22: 40%
  bucket 23: 40%
  bucket 25: 30%
  bucket 26: 30%
  bucket 27: 30%
  bucket 24: 40%
  bucket 22: 50%
  bucket 23: 50%
  bucket 28: 30%
  bucket 25: 40%
  bucket 26: 40%
  bucket 27: 40%
  bucket 24: 50%
  bucket 23: 60%
  bucket 22: 60%
  bucket 28: 40%
  bucket 25: 50%
  bucket 26: 50%
  bucket 27: 50%
  bucket 24: 60%
  bucket 23: 70%
  bucket 22: 70%
  bucket 28: 50%
  bucket 25: 60%
  bucket 26: 60%
  bucket 27: 60%
  bucket 24: 70%
  bucket 23: 80%
  bucket 22: 80%
  bucket 28: 60%
  bucket 25: 70%
  bucket 26: 70%
  bucket 27: 70%
  bucket 23: 90%
  bucket 24: 80%
  bucket 22: 90%
  bucket 28: 70%
  bucket 25: 80%
  bucket 26: 80%
  bucket 23: 100%
  Sorting block of length 99286 for bucket 23
  (Using difference cover)
  bucket 27: 80%
  bucket 24: 90%
  bucket 22: 100%
  Sorting block of length 98783 for bucket 22
  (Using difference cover)
  bucket 28: 80%
  bucket 25: 90%
  bucket 26: 90%
  bucket 27: 90%
  bucket 24: 100%
  Sorting block of length 80198 for bucket 24
  (Using difference cover)
  bucket 28: 90%
  Sorting block time: 00:00:00
Returning block of 99287 for bucket 23
  Sorting block time: 00:00:00
Returning block of 98784 for bucket 22
  bucket 25: 100%
  Sorting block of length 106154 for bucket 25
  (Using difference cover)
Getting block 29 of 58
  Reserving size (108278) for bucket 29
  Calculating Z arrays for bucket 29
  Entering block accumulator loop for bucket 29:
  bucket 26: 100%
  Sorting block of length 76102 for bucket 26
  (Using difference cover)
Getting block 30 of 58
  Reserving size (108278) for bucket 30
  Calculating Z arrays for bucket 30
  Entering block accumulator loop for bucket 30:
  bucket 27: 100%
  Sorting block of length 90344 for bucket 27
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 80199 for bucket 24
Getting block 31 of 58
  Reserving size (108278) for bucket 31
  Calculating Z arrays for bucket 31
  Entering block accumulator loop for bucket 31:
  bucket 28: 100%
  Sorting block of length 86079 for bucket 28
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 76103 for bucket 26
Getting block 32 of 58
  Reserving size (108278) for bucket 32
  Calculating Z arrays for bucket 32
  Entering block accumulator loop for bucket 32:
  Sorting block time: 00:00:00
Returning block of 90345 for bucket 27
  Sorting block time: 00:00:00
Returning block of 106155 for bucket 25
  bucket 29: 10%
  bucket 30: 10%
Getting block 33 of 58
  Reserving size (108278) for bucket 33
  Calculating Z arrays for bucket 33
  Entering block accumulator loop for bucket 33:
Getting block 34 of 58
  Reserving size (108278) for bucket 34
  Calculating Z arrays for bucket 34
  Entering block accumulator loop for bucket 34:
  Sorting block time: 00:00:00
Returning block of 86080 for bucket 28
Getting block 35 of 58
  Reserving size (108278) for bucket 35
  Calculating Z arrays for bucket 35
  Entering block accumulator loop for bucket 35:
  bucket 31: 10%
  bucket 32: 10%
  bucket 30: 20%
  bucket 29: 20%
  bucket 33: 10%
  bucket 34: 10%
  bucket 35: 10%
  bucket 31: 20%
  bucket 32: 20%
  bucket 30: 30%
  bucket 29: 30%
  bucket 33: 20%
  bucket 34: 20%
  bucket 35: 20%
  bucket 31: 30%
  bucket 32: 30%
  bucket 30: 40%
  bucket 33: 30%
  bucket 29: 40%
  bucket 34: 30%
  bucket 31: 40%
  bucket 35: 30%
  bucket 32: 40%
  bucket 30: 50%
  bucket 33: 40%
  bucket 34: 40%
  bucket 29: 50%
  bucket 31: 50%
  bucket 35: 40%
  bucket 30: 60%
  bucket 32: 50%
  bucket 33: 50%
  bucket 34: 50%
  bucket 29: 60%
  bucket 31: 60%
  bucket 35: 50%
  bucket 30: 70%
  bucket 32: 60%
  bucket 33: 60%
  bucket 34: 60%
  bucket 29: 70%
  bucket 31: 70%
  bucket 35: 60%
  bucket 30: 80%
  bucket 32: 70%
  bucket 33: 70%
  bucket 34: 70%
  bucket 29: 80%
  bucket 31: 80%
  bucket 35: 70%
  bucket 30: 90%
  bucket 32: 80%
  bucket 33: 80%
  bucket 34: 80%
  bucket 29: 90%
  bucket 31: 90%
  bucket 35: 80%
  bucket 30: 100%
  Sorting block of length 78708 for bucket 30
  (Using difference cover)
  bucket 32: 90%
  bucket 33: 90%
  bucket 34: 90%
  bucket 31: 100%
  Sorting block of length 65146 for bucket 31
  (Using difference cover)
  bucket 29: 100%
  Sorting block of length 103725 for bucket 29
  (Using difference cover)
  bucket 35: 90%
  bucket 32: 100%
  Sorting block of length 89797 for bucket 32
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 78709 for bucket 30
  bucket 33: 100%
  Sorting block of length 81410 for bucket 33
  (Using difference cover)
  bucket 34: 100%
  Sorting block of length 62062 for bucket 34
  (Using difference cover)
Getting block 36 of 58
  Reserving size (108278) for bucket 36
  Calculating Z arrays for bucket 36
  Entering block accumulator loop for bucket 36:
  Sorting block time: 00:00:00
Returning block of 65147 for bucket 31
  bucket 35: 100%
  Sorting block of length 97338 for bucket 35
  (Using difference cover)
Getting block 37 of 58
  Reserving size (108278) for bucket 37
  Calculating Z arrays for bucket 37
  Entering block accumulator loop for bucket 37:
  Sorting block time: 00:00:00
Returning block of 103726 for bucket 29
  Sorting block time: 00:00:00
Returning block of 62063 for bucket 34
Getting block 38 of 58
  Reserving size (108278) for bucket 38
  Calculating Z arrays for bucket 38
  Entering block accumulator loop for bucket 38:
  bucket 36: 10%
Getting block 39 of 58
  Reserving size (108278) for bucket 39
  Calculating Z arrays for bucket 39
  Entering block accumulator loop for bucket 39:
  Sorting block time: 00:00:00
Returning block of 89798 for bucket 32
  Sorting block time: 00:00:00
Returning block of 81411 for bucket 33
Getting block 40 of 58
  Reserving size (108278) for bucket 40
  Calculating Z arrays for bucket 40
  Entering block accumulator loop for bucket 40:
  bucket 37: 10%
Getting block 41 of 58
  Reserving size (108278) for bucket 41
  Calculating Z arrays for bucket 41
  Entering block accumulator loop for bucket 41:
  Sorting block time: 00:00:00
Returning block of 97339 for bucket 35
Getting block 42 of 58
  Reserving size (108278) for bucket 42
  Calculating Z arrays for bucket 42
  Entering block accumulator loop for bucket 42:
  bucket 38: 10%
  bucket 36: 20%
  bucket 39: 10%
  bucket 37: 20%
  bucket 40: 10%
  bucket 41: 10%
  bucket 42: 10%
  bucket 38: 20%
  bucket 36: 30%
  bucket 39: 20%
  bucket 37: 30%
  bucket 41: 20%
  bucket 40: 20%
  bucket 42: 20%
  bucket 38: 30%
  bucket 36: 40%
  bucket 39: 30%
  bucket 37: 40%
  bucket 41: 30%
  bucket 40: 30%
  bucket 42: 30%
  bucket 38: 40%
  bucket 36: 50%
  bucket 37: 50%
  bucket 39: 40%
  bucket 41: 40%
  bucket 40: 40%
  bucket 38: 50%
  bucket 42: 40%
  bucket 36: 60%
  bucket 37: 60%
  bucket 39: 50%
  bucket 41: 50%
  bucket 40: 50%
  bucket 38: 60%
  bucket 42: 50%
  bucket 36: 70%
  bucket 37: 70%
  bucket 39: 60%
  bucket 41: 60%
  bucket 40: 60%
  bucket 38: 70%
  bucket 42: 60%
  bucket 37: 80%
  bucket 36: 80%
  bucket 39: 70%
  bucket 41: 70%
  bucket 40: 70%
  bucket 38: 80%
  bucket 42: 70%
  bucket 37: 90%
  bucket 36: 90%
  bucket 39: 80%
  bucket 41: 80%
  bucket 38: 90%
  bucket 40: 80%
  bucket 37: 100%
  Sorting block of length 91510 for bucket 37
  (Using difference cover)
  bucket 42: 80%
  bucket 36: 100%
  Sorting block of length 99916 for bucket 36
  (Using difference cover)
  bucket 39: 90%
  bucket 41: 90%
  bucket 38: 100%
  Sorting block of length 75792 for bucket 38
  (Using difference cover)
  bucket 40: 90%
  bucket 42: 90%
  bucket 39: 100%
  Sorting block of length 57171 for bucket 39
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 91511 for bucket 37
  bucket 41: 100%
  Sorting block of length 29470 for bucket 41
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 99917 for bucket 36
Getting block 43 of 58
  Reserving size (108278) for bucket 43
  Calculating Z arrays for bucket 43
  Entering block accumulator loop for bucket 43:
  bucket 40: 100%
  Sorting block of length 90330 for bucket 40
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 75793 for bucket 38
Getting block 44 of 58
  Reserving size (108278) for bucket 44
  Calculating Z arrays for bucket 44
  Entering block accumulator loop for bucket 44:
Getting block 45 of 58
  Reserving size (108278) for bucket 45
  Calculating Z arrays for bucket 45
  Entering block accumulator loop for bucket 45:
  Sorting block time: 00:00:00
Returning block of 29471 for bucket 41
Getting block 46 of 58
  Reserving size (108278) for bucket 46
  Calculating Z arrays for bucket 46
  Entering block accumulator loop for bucket 46:
  bucket 42: 100%
  Sorting block of length 93743 for bucket 42
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 57172 for bucket 39
Getting block 47 of 58
  Reserving size (108278) for bucket 47
  Calculating Z arrays for bucket 47
  Entering block accumulator loop for bucket 47:
  Sorting block time: 00:00:00
Returning block of 90331 for bucket 40
  bucket 43: 10%
Getting block 48 of 58
  Reserving size (108278) for bucket 48
  Calculating Z arrays for bucket 48
  Entering block accumulator loop for bucket 48:
  Sorting block time: 00:00:00
Returning block of 93744 for bucket 42
  bucket 45: 10%
Getting block 49 of 58
  Reserving size (108278) for bucket 49
  Calculating Z arrays for bucket 49
  Entering block accumulator loop for bucket 49:
  bucket 44: 10%
  bucket 46: 10%
  bucket 47: 10%
  bucket 48: 10%
  bucket 43: 20%
  bucket 45: 20%
  bucket 49: 10%
  bucket 46: 20%
  bucket 44: 20%
  bucket 47: 20%
  bucket 48: 20%
  bucket 45: 30%
  bucket 43: 30%
  bucket 49: 20%
  bucket 46: 30%
  bucket 47: 30%
  bucket 44: 30%
  bucket 45: 40%
  bucket 48: 30%
  bucket 43: 40%
  bucket 46: 40%
  bucket 49: 30%
  bucket 47: 40%
  bucket 44: 40%
  bucket 45: 50%
  bucket 48: 40%
  bucket 46: 50%
  bucket 43: 50%
  bucket 49: 40%
  bucket 47: 50%
  bucket 44: 50%
  bucket 45: 60%
  bucket 48: 50%
  bucket 46: 60%
  bucket 47: 60%
  bucket 49: 50%
  bucket 43: 60%
  bucket 45: 70%
  bucket 44: 60%
  bucket 48: 60%
  bucket 46: 70%
  bucket 47: 70%
  bucket 49: 60%
  bucket 43: 70%
  bucket 45: 80%
  bucket 48: 70%
  bucket 44: 70%
  bucket 47: 80%
  bucket 46: 80%
  bucket 49: 70%
  bucket 43: 80%
  bucket 45: 90%
  bucket 48: 80%
  bucket 47: 90%
  bucket 46: 90%
  bucket 44: 80%
  bucket 49: 80%
  bucket 43: 90%
  bucket 45: 100%
  Sorting block of length 71301 for bucket 45
  (Using difference cover)
  bucket 47: 100%
  Sorting block of length 96570 for bucket 47
  (Using difference cover)
  bucket 48: 90%
  bucket 46: 100%
  Sorting block of length 44145 for bucket 46
  (Using difference cover)
  bucket 49: 90%
  bucket 44: 90%
  bucket 43: 100%
  Sorting block of length 63920 for bucket 43
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 44146 for bucket 46
Getting block 50 of 58
  Reserving size (108278) for bucket 50
  Calculating Z arrays for bucket 50
  Entering block accumulator loop for bucket 50:
  bucket 48: 100%
  Sorting block of length 106716 for bucket 48
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 71302 for bucket 45
Getting block 51 of 58
  Reserving size (108278) for bucket 51
  Calculating Z arrays for bucket 51
  Entering block accumulator loop for bucket 51:
  bucket 49: 100%
  Sorting block of length 38211 for bucket 49
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 96571 for bucket 47
  bucket 44: 100%
  Sorting block of length 98320 for bucket 44
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 63921 for bucket 43
Getting block 52 of 58
  Reserving size (108278) for bucket 52
  Calculating Z arrays for bucket 52
  Entering block accumulator loop for bucket 52:
Getting block 53 of 58
  Reserving size (108278) for bucket 53
  Calculating Z arrays for bucket 53
  Entering block accumulator loop for bucket 53:
  Sorting block time: 00:00:00
Returning block of 38212 for bucket 49
  bucket 50: 10%
Getting block 54 of 58
  Reserving size (108278) for bucket 54
  Calculating Z arrays for bucket 54
  Entering block accumulator loop for bucket 54:
  bucket 51: 10%
  Sorting block time: 00:00:00
Returning block of 106717 for bucket 48
  bucket 52: 10%
  Sorting block time: 00:00:00
Returning block of 98321 for bucket 44
Getting block 55 of 58
  Reserving size (108278) for bucket 55
  Calculating Z arrays for bucket 55
  Entering block accumulator loop for bucket 55:
  bucket 53: 10%
  bucket 50: 20%
Getting block 56 of 58
  bucket 54: 10%
  Reserving size (108278) for bucket 56
  Calculating Z arrays for bucket 56
  Entering block accumulator loop for bucket 56:
  bucket 51: 20%
  bucket 52: 20%
  bucket 55: 10%
  bucket 53: 20%
  bucket 56: 10%
  bucket 50: 30%
  bucket 54: 20%
  bucket 51: 30%
  bucket 52: 30%
  bucket 55: 20%
  bucket 53: 30%
  bucket 56: 20%
  bucket 50: 40%
  bucket 54: 30%
  bucket 51: 40%
  bucket 52: 40%
  bucket 55: 30%
  bucket 53: 40%
  bucket 56: 30%
  bucket 50: 50%
  bucket 54: 40%
  bucket 51: 50%
  bucket 52: 50%
  bucket 55: 40%
  bucket 56: 40%
  bucket 53: 50%
  bucket 50: 60%
  bucket 54: 50%
  bucket 51: 60%
  bucket 52: 60%
  bucket 55: 50%
  bucket 56: 50%
  bucket 53: 60%
  bucket 50: 70%
  bucket 54: 60%
  bucket 51: 70%
  bucket 52: 70%
  bucket 55: 60%
  bucket 56: 60%
  bucket 53: 70%
  bucket 50: 80%
  bucket 54: 70%
  bucket 51: 80%
  bucket 52: 80%
  bucket 55: 70%
  bucket 56: 70%
  bucket 53: 80%
  bucket 50: 90%
  bucket 54: 80%
  bucket 51: 90%
  bucket 52: 90%
  bucket 55: 80%
  bucket 56: 80%
  bucket 53: 90%
  bucket 50: 100%
  Sorting block of length 86125 for bucket 50
  (Using difference cover)
  bucket 51: 100%
  Sorting block of length 31794 for bucket 51
  (Using difference cover)
  bucket 54: 90%
  bucket 52: 100%
  Sorting block of length 102520 for bucket 52
  (Using difference cover)
  bucket 56: 90%
  bucket 55: 90%
  Sorting block time: 00:00:00
Returning block of 31795 for bucket 51
Getting block 57 of 58
  Reserving size (108278) for bucket 57
  Calculating Z arrays for bucket 57
  Entering block accumulator loop for bucket 57:
  bucket 53: 100%
  Sorting block of length 97341 for bucket 53
  (Using difference cover)
  bucket 54: 100%
  Sorting block of length 103831 for bucket 54
  (Using difference cover)
  bucket 56: 100%
  Sorting block of length 78840 for bucket 56
  (Using difference cover)
  bucket 55: 100%
  Sorting block of length 88733 for bucket 55
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 86126 for bucket 50
  bucket 57: 10%
Getting block 58 of 58
  Reserving size (108278) for bucket 58
  Calculating Z arrays for bucket 58
  Entering block accumulator loop for bucket 58:
  Sorting block time: 00:00:00
Returning block of 102521 for bucket 52
  Sorting block time: 00:00:00
Returning block of 97342 for bucket 53
  Sorting block time: 00:00:00
Returning block of 103832 for bucket 54
  bucket 58: 10%
  Sorting block time: 00:00:00
Returning block of 78841 for bucket 56
  Sorting block time: 00:00:00
Returning block of 88734 for bucket 55
  bucket 57: 20%
  bucket 58: 20%
  bucket 58: 30%
  bucket 57: 30%
  bucket 58: 40%
  bucket 57: 40%
  bucket 58: 50%
  bucket 58: 60%
  bucket 57: 50%
  bucket 58: 70%
  bucket 58: 80%
  bucket 57: 60%
  bucket 58: 90%
  bucket 57: 70%
  bucket 58: 100%
  Sorting block of length 48552 for bucket 58
  (Using difference cover)
  bucket 57: 80%
  Sorting block time: 00:00:00
Returning block of 48553 for bucket 58
  bucket 57: 90%
  bucket 57: 100%
  Sorting block of length 61003 for bucket 57
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 61004 for bucket 57
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 1137388
fchr[G]: 2312030
fchr[T]: 3483418
fchr[$]: 4619842
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 5737252 bytes to primary EBWT file: GCF_000005845.2_ASM584v2_genomic_masked.rev.1.bt2
Wrote 1154968 bytes to secondary EBWT file: GCF_000005845.2_ASM584v2_genomic_masked.rev.2.bt2
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 4619842
    bwtLen: 4619843
    sz: 1154961
    bwtSz: 1154961
    lineRate: 6
    offRate: 4
    offMask: 0xfffffff0
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 288741
    offsSz: 1154964
    lineSz: 64
    sideSz: 64
    sideBwtSz: 48
    sideBwtLen: 192
    numSides: 24062
    numLines: 24062
    ebwtTotLen: 1539968
    ebwtTotSz: 1539968
    color: 0
    reverse: 1
Total time for backward call to driver() for mirror index: 00:00:01
COMMAND="$(echo bowtie2-build --threads 8 GCF_000005845.2_ASM584v2_genomic_masked.fasta GCF_000005845.2_ASM584v2_genomic_masked)"
COMMAND="$(echo bowtie2-build --threads 8 GCF_000005845.2_ASM584v2_genomic_masked.fasta GCF_000005845.2_ASM584v2_genomic_masked)"
set +v +H +o history
cp: cannot stat ‘.command.log’: No such file or directory
